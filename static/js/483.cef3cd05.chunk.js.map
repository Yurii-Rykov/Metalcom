{"version":3,"file":"static/js/483.cef3cd05.chunk.js","mappings":"wOACA,GAAgB,MAAQ,2BAA2B,UAAY,+BAA+B,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,oDAAoD,QAAU,6BAA6B,QAAU,6BAA6B,aAAe,kCAAkC,SAAW,8BAA8B,cAAgB,mCAAmC,WAAa,gCAAgC,eAAiB,oCAAoC,eAAiB,qC,SCsE/mB,EA/DoB,WAAO,IAAD,EACdA,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAuBE,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAWC,EAAAA,EAAAA,MACXC,EAAaL,EAAaM,IAAI,WAC9BC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASL,EAAa,MAC3DM,EAAUJ,EAAQK,MAAK,qBAAGC,KAAgBhB,KAWhD,OADAiB,QAAQC,IAAI,YAAaJ,IAErB,4BACI,iBAAKK,UAAWC,EAAAA,MAAhB,WACI,SAAC,KAAD,CACIC,KAAK,iCACLC,KAAI,UAAKC,EAAAA,EAAL,cACJC,QAAS,WACLlB,EAAS,YAAD,OAAaE,QAG7B,eAAIQ,GAAG,UAAP,SAAkBS,EAAYjB,EAAa,MAC3C,SAAC,KAAD,QAEJ,iBAAKW,UAAWC,EAAAA,UAAhB,WACI,kBAAOD,UAAWC,EAAAA,MAAlB,UACI,eAAID,UAAWC,EAAAA,KAAf,SACKV,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,IAAKb,EAAvB,EAAuBA,GAAvB,OACT,gBAAaG,UAAWH,IAAOhB,EAAYoB,EAAAA,OAAWA,EAAAA,KAAtD,WACI,eAAGD,UAAWC,EAAAA,SAAd,UACKO,EADL,MACe,iBAAMR,UAAWC,EAAAA,SAAjB,SAA8BQ,QAE7C,gBAAKT,UAAWC,EAAAA,IAAOU,IAAKD,EAAKE,IAAI,GAAGC,MAAM,MAAMR,QAAS,kBA9BnE,SAAAR,GAClBV,EAAS,YAAD,OAAaU,EAAb,oBAA2BR,GAAc,CAAEyB,SAAS,IA6B+BC,CAAclB,QAJ5EA,WASrB,iBAAKG,UAAWC,EAAAA,cAAhB,WACI,qCAAaN,EAAQc,SACrB,iBAAKT,UAAWC,EAAAA,KAAhB,WACI,gBAAKU,IAAKhB,EAAQe,IAAKE,IAAI,GAAGC,MAAM,MAAMG,IAAK/B,KAC/C,yBAAIU,EAAQc,KAAZ,wSAEJ,eAAIT,UAAWC,EAAAA,QAAf,mBACKN,EAAQsB,qBADb,aACK,EAAuBV,KAAI,SAAAG,GAAG,OAC3B,eAAcV,UAAWC,EAAAA,QAAzB,UACI,gBAAKU,IAAKD,EAAKE,IAAI,GAAGC,MAAM,MAAMR,QAAS,kBAxCxDa,EAwCqER,OAvChFzB,EAAQkC,QAAQR,IAAMO,GADX,IAAAA,MAuCkBR,mB","sources":["webpack://metalcom/./src/pages/ProductCard/ProductCard.module.css?58d1","pages/ProductCard/ProductCard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"ProductCard_thumb__pS5z4\",\"container\":\"ProductCard_container__hZ+ht\",\"aside\":\"ProductCard_aside__cWrh1\",\"list\":\"ProductCard_list__iDfEQ\",\"card\":\"ProductCard_card__2vPPq\",\"item\":\"ProductCard_item__mYUcL\",\"active\":\"ProductCard_active__lBomi ProductCard_item__mYUcL\",\"listImg\":\"ProductCard_listImg__ICgpx\",\"itemImg\":\"ProductCard_itemImg__hEgtj\",\"card_wrapper\":\"ProductCard_card_wrapper__c-Zks\",\"category\":\"ProductCard_category__MEhYQ\",\"features_item\":\"ProductCard_features_item__i9RM9\",\"card_title\":\"ProductCard_card_title__WR+X4\",\"card_size_item\":\"ProductCard_card_size_item__ivm+t\",\"card_text_base\":\"ProductCard_card_text_base__V0Hc-\"};","import { useRef } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, Downloader } from 'components';\nimport catalogName from 'localization/catalogName.json';\nimport icons from 'images/icons.svg';\nimport s from './ProductCard.module.css';\n\nconst ProductCard = () => {\n    const { productId } = useParams();\n    const [searchParams] = useSearchParams();\n    const mainImg = useRef(null);\n    const navigate = useNavigate();\n    const catalogIdx = searchParams.get('catalog');\n    const catalog = useSelector(state => state.catalogs[catalogIdx - 1]);\n    const product = catalog.find(({ id }) => id === productId);\n\n    const chooseProduct = id => {\n        navigate(`/product/${id}?catalog=${catalogIdx}`, { replace: true });\n    };\n\n    const toMain = url => {\n        mainImg.current.src = url;\n    };\n\n    console.log('product: ', product); ///////////////\n    return (\n        <div>\n            <div className={s.thumb}>\n                <Button\n                    text=\"Назад\"\n                    icon={`${icons}#arrowLeft`}\n                    onClick={() => {\n                        navigate(`/catalog/${catalogIdx}`);\n                    }}\n                />\n                <h2 id=\"catalog\">{catalogName[catalogIdx - 1]}</h2>\n                <Downloader />\n            </div>\n            <div className={s.container}>\n                <aside className={s.aside}>\n                    <ul className={s.list}>\n                        {catalog.map(({ subname, name, img, id }) => (\n                            <li key={id} className={id === productId ? s.active : s.item}>\n                                <p className={s.category}>\n                                    {subname}: <span className={s.cardName}>{name}</span>\n                                </p>\n                                <img className={s.img} src={img} alt=\"\" width=\"200\" onClick={() => chooseProduct(id)} />\n                            </li>\n                        ))}\n                    </ul>\n                </aside>\n                <div className={s.cardContainer}>\n                    <h2>Product {product.name}</h2>\n                    <div className={s.card}>\n                        <img src={product.img} alt=\"\" width=\"800\" ref={mainImg} />\n                        <p>{product.name} однозначно классный продукт, Вам полюбому нужен. ИНФА = 100%</p>\n                    </div>\n                    <ul className={s.listImg}>\n                        {product.additionalImg?.map(img => (\n                            <li key={img} className={s.itemImg}>\n                                <img src={img} alt=\"\" width=\"200\" onClick={() => toMain(img)} />\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductCard;\n"],"names":["productId","useParams","useSearchParams","searchParams","mainImg","useRef","navigate","useNavigate","catalogIdx","get","catalog","useSelector","state","catalogs","product","find","id","console","log","className","s","text","icon","icons","onClick","catalogName","map","subname","name","img","src","alt","width","replace","chooseProduct","ref","additionalImg","url","current"],"sourceRoot":""}